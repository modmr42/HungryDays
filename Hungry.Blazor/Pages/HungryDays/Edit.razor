@using Hungry.Shared.Models
@using Hungry.Shared.Repositories

@page "/hungrydays/edit/{Id:int}"

<PageTitle>Edit</PageTitle>

@inject HungryRepository _hungryRepostiory
@inject NavigationManager NavigationManager

<div class="row">
    <EditForm Model="@hungryDay" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-12">
        <div class="card mb-3" >
            <div class="card-body">
            <h5 class="card-title">@hungryDay.Name</h5>
            <div class="input-group flex-nowrap">
                <span class="input-group-text">Diner</span>
                <InputText id="Diner" class="form-control" @bind-Value="@hungryDay.Diner" />
            </div>

                    @foreach(var item in @hungryDay.Items)
                    {
                        <div class="input-group">
                            <div class="input-group-text">
                                <InputCheckbox class="form-check-input mt-0" @bind-Value="item.Bought"/>
                            </div>
                            <InputText class="form-control" @bind-Value="@item.Name"/>
                        </div>

                    }
            </div>
        </div>
    </div>


    <div class="col-md-6">
        <button class="btn btn-success" type="submit">
            Save
        </button>

    </div>

    </EditForm>

            <button class="btn btn-warning" @onclick="AddItem">
            Add item
        </button>

</div>
@code {
    public HungryDay? hungryDay;

    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        hungryDay = _hungryRepostiory.GetHungryDay(Id);
    }

    private void HandleValidSubmit()
    {
        _hungryRepostiory.EditHungryDay(hungryDay);
        NavigationManager.NavigateTo("hungrydays");
        // Process the valid form
    }

    private void AddItem()
    {
        hungryDay.Items.Add(
            new Item()
        );
    }
}
