@page "/grocerylist"
@using HungryDays.Blazor.Shared.Components
@using HungryDays.Database.Entities
@using HungryDays.Domain.Models
@using HungryDays.Domain.Services
@using System.Linq;

@inject HungryDayService _hungryDayService
@inject HungryItemService _hungryItemService
@inject NavigationManager NavigationManager

@if(hungryItemEntities != null){
	@foreach (var _hungryItemEntity in hungryItemEntities)
	{
		<div class="row mt-2" style="box-shadow: 0px 0px 6px 0px;">
			<div class="col-1 align-self-center">
				<input type="checkbox" @bind="_hungryItemEntity.Bought" @onclick="async () => await ItemCheckChanged(_hungryItemEntity)"/> 
			</div>
			<div class="col-3 align-self-center">
				<label class="col-form-label">@_hungryItemEntity.Name</label>
			</div>
			<div class="col-1 align-self-center">
				<label class="col-form-label fw-bold">@_hungryItemEntity.Quantity x</label>
			</div>
			<div class="col-3 align-self-center">
				<label class="col-form-label">@_hungryItemEntity.Store.ToString()</label>
			</div>
			<div class="col-1 offset-1 align-self-center"><a href="#" data-bs-target="#editIngredient" data-bs-toggle="modal"><i class="far fa-edit text-warning"></i></a>
				<div id="editIngredient" class="modal fade" role="dialog" tabindex="-1">
					<div class="modal-dialog" role="document">
						<div class="modal-content">
							<div class="modal-header">
								<h4 class="modal-title">Edit ingredient</h4>
								<button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<form>
								<div class="modal-body">
									<label class="form-label">Name</label>
									<input class="form-control" type="text" />
									<label class="form-label">Amount</label>
									<input class="form-range form-control" type="range" min="0" max="10" step="1" value="0" name="Amount" />
									<label class="form-label">Store</label>
									<select class="form-select form-select">
										<option value="Ah">Albert heijn</option>
									</select>
									<div class="form-check mt-4">
										<input id="formCheck-2" class="form-check-input" type="checkbox" />
										<label class="form-check-label" for="formCheck-2">Bought</label>
									</div>
								</div>
								<div class="modal-footer">
									<button class="btn btn-light" type="button" data-bs-dismiss="modal">Close</button>
									<button class="btn btn-primary" type="submit">Save</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
			<div class="col-1 text-center align-self-center">
				<div id="deleteIngredient" class="modal fade" role="dialog" tabindex="-1">
					<div class="modal-dialog" role="document">
						<div class="modal-content">
							<div class="modal-header">
								<h4 class="modal-title">Delete ingredient</h4>
								<button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body">
								<p>Are you sure you want to delete this ingredient?</p>
							</div>
							<div class="modal-footer">
								<form>
									<button class="btn btn-light" type="button" data-bs-dismiss="modal">Close</button>
									<button class="btn btn-danger" type="submit">Delete</button>
								</form>
							</div>
						</div>
					</div>
				</div><a data-bs-target="#deleteIngredient" data-bs-toggle="modal"><i class="far fa-trash-alt text-danger"></i></a> </div>
		</div>
	}
}

@code {
	public IEnumerable<HungryItemEntity>? hungryItemEntities;

	protected override async Task OnInitializedAsync()
	{
		hungryItemEntities = await _hungryItemService.GetAll();
	}

	private async Task ItemCheckChanged(HungryItemEntity hungryItem)
	{
		hungryItem.Bought = true;
		await _hungryItemService.Update(hungryItem);
		hungryItemEntities = await _hungryItemService.GetAll();
	}
}